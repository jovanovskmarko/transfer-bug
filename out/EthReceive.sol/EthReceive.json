{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103c18061007e6000396000f3fe60806040526004361061004a5760003560e01c80632e1a7d4d1461004f578063715018a6146100645780638da5cb5b14610079578063d0e30db014610062578063f2fde38b146100a5575b600080fd5b61006261005d366004610317565b6100c5565b005b34801561007057600080fd5b506100626101e0565b34801561008557600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100b157600080fd5b506100626100c0366004610330565b6101f4565b6100cd61026d565b8047101561013e5760405162461bcd60e51b815260206004820152603360248201527f54686520616d6d6f756e7420746f2077697468647261772069732067726561746044820152726572207468616e207468652062616c616e636560681b60648201526084015b60405180910390fd5b600081116101865760405162461bcd60e51b8152602060048201526015602482015274086c2dcdcdee840eed2e8d0c8e4c2ee4060408ae8d605b1b6044820152606401610135565b3361019982670de0b6b3a7640000610360565b604051600081818185875af1925050503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50505050565b6101e861026d565b6101f260006102c7565b565b6101fc61026d565b6001600160a01b0381166102615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610135565b61026a816102c7565b50565b6000546001600160a01b031633146101f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610135565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561032957600080fd5b5035919050565b60006020828403121561034257600080fd5b81356001600160a01b038116811461035957600080fd5b9392505050565b808202811582820484141761038557634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212200712b30b048ebe5327b2d695ae38380a7beb7ed563ad0455ddbce1ca783fca5464736f6c63430008110033",
    "sourceMap": "130:415:16:-:0;;;;;;;;;;;;-1:-1:-1;964:32:14;736:10:15;964:18:14;:32::i;:::-;130:415:16;;2510:191:14;2584:16;2603:6;;-1:-1:-1;;;;;2620:17:14;;;-1:-1:-1;;;;;;2620:17:14;;;;;;2653:40;;2603:6;;;;;;;2653:40;;2584:16;2653:40;2573:128;2510:191;:::o;130:415:16:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061004a5760003560e01c80632e1a7d4d1461004f578063715018a6146100645780638da5cb5b14610079578063d0e30db014610062578063f2fde38b146100a5575b600080fd5b61006261005d366004610317565b6100c5565b005b34801561007057600080fd5b506100626101e0565b34801561008557600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100b157600080fd5b506100626100c0366004610330565b6101f4565b6100cd61026d565b8047101561013e5760405162461bcd60e51b815260206004820152603360248201527f54686520616d6d6f756e7420746f2077697468647261772069732067726561746044820152726572207468616e207468652062616c616e636560681b60648201526084015b60405180910390fd5b600081116101865760405162461bcd60e51b8152602060048201526015602482015274086c2dcdcdee840eed2e8d0c8e4c2ee4060408ae8d605b1b6044820152606401610135565b3361019982670de0b6b3a7640000610360565b604051600081818185875af1925050503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50505050565b6101e861026d565b6101f260006102c7565b565b6101fc61026d565b6001600160a01b0381166102615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610135565b61026a816102c7565b50565b6000546001600160a01b031633146101f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610135565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561032957600080fd5b5035919050565b60006020828403121561034257600080fd5b81356001600160a01b038116811461035957600080fd5b9392505050565b808202811582820484141761038557634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212200712b30b048ebe5327b2d695ae38380a7beb7ed563ad0455ddbce1ca783fca5464736f6c63430008110033",
    "sourceMap": "130:415:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:291;;;;;;:::i;:::-;;:::i;:::-;;1891:103:14;;;;;;;;;;;;;:::i;1243:87::-;;;;;;;;;;-1:-1:-1;1289:7:14;1316:6;1243:87;;;-1:-1:-1;;;;;1316:6:14;;;345:51:18;;1243:87:14;;;;;333:2:18;1243:87:14;;;2149:201;;;;;;;;;;-1:-1:-1;2149:201:14;;;;;:::i;:::-;;:::i;247:291:16:-;1129:13:14;:11;:13::i;:::-;350:7:16::1;325:21;:32;;317:95;;;::::0;-1:-1:-1;;;317:95:16;;900:2:18;317:95:16::1;::::0;::::1;882:21:18::0;939:2;919:18;;;912:30;978:34;958:18;;;951:62;-1:-1:-1;;;1029:18:18;;;1022:49;1088:19;;317:95:16::1;;;;;;;;;441:1;431:7;:11;423:44;;;::::0;-1:-1:-1;;;423:44:16;;1320:2:18;423:44:16::1;::::0;::::1;1302:21:18::0;1359:2;1339:18;;;1332:30;-1:-1:-1;;;1378:18:18;;;1371:51;1439:18;;423:44:16::1;1118:345:18::0;423:44:16::1;486:10;509:16;:7:::0;519:6:::1;509:16;:::i;:::-;478:52;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:291:::0;:::o;1891:103:14:-;1129:13;:11;:13::i;:::-;1956:30:::1;1983:1;1956:18;:30::i;:::-;1891:103::o:0;2149:201::-;1129:13;:11;:13::i;:::-;-1:-1:-1;;;;;2238:22:14;::::1;2230:73;;;::::0;-1:-1:-1;;;2230:73:14;;2150:2:18;2230:73:14::1;::::0;::::1;2132:21:18::0;2189:2;2169:18;;;2162:30;2228:34;2208:18;;;2201:62;-1:-1:-1;;;2279:18:18;;;2272:36;2325:19;;2230:73:14::1;1948:402:18::0;2230:73:14::1;2314:28;2333:8;2314:18;:28::i;:::-;2149:201:::0;:::o;1408:132::-;1289:7;1316:6;-1:-1:-1;;;;;1316:6:14;736:10:15;1472:23:14;1464:68;;;;-1:-1:-1;;;1464:68:14;;2557:2:18;1464:68:14;;;2539:21:18;;;2576:18;;;2569:30;2635:34;2615:18;;;2608:62;2687:18;;1464:68:14;2355:356:18;2510:191:14;2584:16;2603:6;;-1:-1:-1;;;;;2620:17:14;;;-1:-1:-1;;;;;;2620:17:14;;;;;;2653:40;;2603:6;;;;;;;2653:40;;2584:16;2653:40;2573:128;2510:191;:::o;14:180:18:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:18;;14:180;-1:-1:-1;14:180:18:o;407:286::-;466:6;519:2;507:9;498:7;494:23;490:32;487:52;;;535:1;532;525:12;487:52;561:23;;-1:-1:-1;;;;;613:31:18;;603:42;;593:70;;659:1;656;649:12;593:70;682:5;407:286;-1:-1:-1;;;407:286:18:o;1468:265::-;1541:9;;;1572;;1589:15;;;1583:22;;1569:37;1559:168;;1649:10;1644:3;1640:20;1637:1;1630:31;1684:4;1681:1;1674:15;1712:4;1709:1;1702:15;1559:168;1468:265;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deposit()": "d0e30db0",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/EthReceive.sol\":\"EthReceive\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":op/=lib/openzeppelin-contracts/\",\":remappings /= [\\\"op/=lib/openzeppelin-contracts\\\",\\\"@openzeppelin/=lib/openzeppelin-contracts\\\"]/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488\",\"dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"src/EthReceive.sol\":{\"keccak256\":\"0x2df52f36220ba266a645ac3b851e5567360208208fc5fb1df3507e118ad9af3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9290ab9e7282aeba5b985792f2ddbf454e6c450d6789f789da784bea101dd9fc\",\"dweb:/ipfs/QmUQ2b3yNkAKMYYP9HvtrNkgmiWUHsXDM5AJr8deqZKUmk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":op/=lib/openzeppelin-contracts/",
        ":remappings /= [\"op/=lib/openzeppelin-contracts\",\"@openzeppelin/=lib/openzeppelin-contracts\"]/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/EthReceive.sol": "EthReceive"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5",
        "urls": [
          "bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488",
          "dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "src/EthReceive.sol": {
        "keccak256": "0x2df52f36220ba266a645ac3b851e5567360208208fc5fb1df3507e118ad9af3f",
        "urls": [
          "bzz-raw://9290ab9e7282aeba5b985792f2ddbf454e6c450d6789f789da784bea101dd9fc",
          "dweb:/ipfs/QmUQ2b3yNkAKMYYP9HvtrNkgmiWUHsXDM5AJr8deqZKUmk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/EthReceive.sol",
    "id": 24846,
    "exportedSymbols": {
      "Context": [
        24794
      ],
      "EthReceive": [
        24845
      ],
      "Ownable": [
        24772
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:512:16",
    "nodes": [
      {
        "id": 24796,
        "nodeType": "PragmaDirective",
        "src": "33:24:16",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 24797,
        "nodeType": "ImportDirective",
        "src": "61:65:16",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24846,
        "sourceUnit": 24773,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24845,
        "nodeType": "ContractDefinition",
        "src": "130:415:16",
        "nodes": [
          {
            "id": 24803,
            "nodeType": "FunctionDefinition",
            "src": "169:70:16",
            "nodes": [],
            "body": {
              "id": 24802,
              "nodeType": "Block",
              "src": "205:34:16",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "178:7:16",
            "parameters": {
              "id": 24800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "185:2:16"
            },
            "returnParameters": {
              "id": 24801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "205:0:16"
            },
            "scope": 24845,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24844,
            "nodeType": "FunctionDefinition",
            "src": "247:291:16",
            "nodes": [],
            "body": {
              "id": 24843,
              "nodeType": "Block",
              "src": "306:232:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 24813,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "333:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EthReceive_$24845",
                                  "typeString": "contract EthReceive"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EthReceive_$24845",
                                  "typeString": "contract EthReceive"
                                }
                              ],
                              "id": 24812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "325:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24811,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "325:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "325:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 24815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "339:7:16",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "325:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 24816,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24805,
                          "src": "350:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "325:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6d6f756e7420746f2077697468647261772069732067726561746572207468616e207468652062616c616e6365",
                        "id": 24818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "358:53:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9978c0570ff793d803cf583952c2ada9c520864e6137b267d8d96b23765f17d0",
                          "typeString": "literal_string \"The ammount to withdraw is greater than the balance\""
                        },
                        "value": "The ammount to withdraw is greater than the balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9978c0570ff793d803cf583952c2ada9c520864e6137b267d8d96b23765f17d0",
                          "typeString": "literal_string \"The ammount to withdraw is greater than the balance\""
                        }
                      ],
                      "id": 24810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "317:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "317:95:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24820,
                  "nodeType": "ExpressionStatement",
                  "src": "317:95:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24822,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24805,
                          "src": "431:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 24823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "441:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "431:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207769746864726177203020457468",
                        "id": 24825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "443:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4555fc57c847ae59160170aa5e41b82093bf3616601a602cab53f42189123e50",
                          "typeString": "literal_string \"Cannot withdraw 0 Eth\""
                        },
                        "value": "Cannot withdraw 0 Eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4555fc57c847ae59160170aa5e41b82093bf3616601a602cab53f42189123e50",
                          "typeString": "literal_string \"Cannot withdraw 0 Eth\""
                        }
                      ],
                      "id": 24821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "423:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24827,
                  "nodeType": "ExpressionStatement",
                  "src": "423:44:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 24840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "527:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24830,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "486:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "490:6:16",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "486:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "478:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 24828,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "478:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "478:19:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 24833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "498:4:16",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "478:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 24839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 24838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24834,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24805,
                            "src": "509:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 24837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 24835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "519:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 24836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "523:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "519:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "509:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "478:48:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 24841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:52:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 24842,
                  "nodeType": "ExpressionStatement",
                  "src": "478:52:16"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24807,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "297:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24691,
                  "src": "297:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "297:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "256:8:16",
            "parameters": {
              "id": 24806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24805,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "273:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 24844,
                  "src": "265:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "264:17:16"
            },
            "returnParameters": {
              "id": 24809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:16"
            },
            "scope": 24845,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24798,
              "name": "Ownable",
              "nameLocations": [
                "153:7:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24772,
              "src": "153:7:16"
            },
            "id": 24799,
            "nodeType": "InheritanceSpecifier",
            "src": "153:7:16"
          }
        ],
        "canonicalName": "EthReceive",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24845,
          24772,
          24794
        ],
        "name": "EthReceive",
        "nameLocation": "139:10:16",
        "scope": 24846,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 16
}