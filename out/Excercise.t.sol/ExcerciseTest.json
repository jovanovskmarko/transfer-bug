{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDecrementCounter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetCount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIncrementCounter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "129:773:19:-:0;;;1609:26:0;;;-1:-1:-1;;1609:26:0;1631:4;1609:26;;;664:14:4;:12;:14::i;:::-;634:44;;129:773:19;;;;;;;;;;;;6076:2151:4;6212:46;;;;;;;;;;;;;;;-1:-1:-1;;;6212:46:4;;;;;;6227:5;6212:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6191:18;;-1:-1:-1;;;216:20:20;;6117:7:4;;6191:9;;252:11:20;6191:18:4;;;;;;;;;;;;;:67;;:18;;:67;;:18;:67;:::i;:::-;-1:-1:-1;6191:67:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6292:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;6292:48:4;;;;;;6309:5;6292:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6269:20;;-1:-1:-1;;;3197:22:20;;6292:48:4;;-1:-1:-1;6269:9:4;;3235:11:20;6269:20:4;;;;;;;;;;;;;:71;;:20;;:71;;:20;:71;:::i;:::-;-1:-1:-1;6269:71:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6374:84;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6374:84:4;;;;;;;6391:1;6374:84;;;;;;;;;;;;;;;;;;;;;;;6351:20;;-1:-1:-1;;;3459:22:20;;6351:9:4;;3506:1:20;3497:11;6351:20:4;;;;;;;;;;;;;:107;;:20;;:107;;:20;:107;:::i;:::-;-1:-1:-1;6351:107:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6491:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6491:82:4;;;;;;;6507:1;6491:82;;;;;;;;;;;;;;;;;;;;;;;6469:19;;-1:-1:-1;;;3721:21:20;;6469:9:4;;3767:1:20;3758:11;6469:19:4;;;;;;;;;;;;;:104;;:19;;:104;;:19;:104;:::i;:::-;-1:-1:-1;6469:104:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6607:53:4;;;;;;;;;;;;;;;-1:-1:-1;;;6607:53:4;;;;;;6624:8;6607:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6584:20;;-1:-1:-1;;;3982:22:20;;6607:53:4;;-1:-1:-1;6584:9:4;;4020:11:20;6584:20:4;;;;;;;;;;;;;:76;;:20;;:76;;:20;:76;:::i;:::-;-1:-1:-1;6584:76:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6695:52:4;;;;;;;;;;;;;;;-1:-1:-1;;;6695:52:4;;;;;;6713:2;6695:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6671:21;;-1:-1:-1;;;4244:23:20;;6695:52:4;;-1:-1:-1;6671:9:4;;4283:11:20;6671:21:4;;;;;;;;;;;;;:76;;:21;;:76;;:21;:76;:::i;:::-;-1:-1:-1;6671:76:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6789:59:4;;;;;;;;;;;;;;;-1:-1:-1;;;6789:59:4;;;;;;6814:3;6789:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6758:28;;-1:-1:-1;;;4507:30:20;;6789:59:4;;-1:-1:-1;6758:9:4;;4553:12:20;6758:28:4;;;;;;;;;;;;;:90;;:28;;:90;;:28;:90;:::i;:::-;-1:-1:-1;6758:90:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6887:60:4;;;;;;;;;;;;;;;-1:-1:-1;;;6887:60:4;;;;;;6909:5;6887:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6859:25;;-1:-1:-1;;;4778:27:20;;6887:60:4;;-1:-1:-1;6859:9:4;;4821:12:20;6859:25:4;;;;;;;;;;;;;:88;;:25;;:88;;:25;:88;:::i;:::-;-1:-1:-1;6859:88:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6993:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7022:6;6993:77;;;;;;;;;;;;;;;;;;;;;;;6958:32;;5058:21:20;5046:34;;6958:9:4;;5105:2:20;5096:12;6958:32:4;;;;;;;;;;;;;:112;;:32;;:112;;:32;:112;:::i;:::-;-1:-1:-1;6958:112:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7110:61:4;;;;;;;;;;;;;;;-1:-1:-1;;;7110:61:4;;;;;;7133:5;7110:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7081:26;;-1:-1:-1;;;5321:28:20;;7110:61:4;;-1:-1:-1;7081:9:4;;5365:12:20;7081:26:4;;;;;;;;;;;;;:90;;:26;;:90;;:26;:90;:::i;:::-;-1:-1:-1;7081:90:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7205:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;7205:48:4;;;;;;7222:3;7205:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7182:20;;-1:-1:-1;;;5590:22:20;;7205:48:4;;-1:-1:-1;7182:9:4;;5628:11:20;7182:20:4;;;;;;;;;;;;;:71;;:20;;:71;;:20;:71;:::i;:::-;-1:-1:-1;7182:71:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7294:64:4;;;;;;;;;;;;;;;-1:-1:-1;;;7294:64:4;;;;;;7318:5;7294:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7264:27;;-1:-1:-1;;;5852:29:20;;7294:64:4;;-1:-1:-1;7264:9:4;;5897:12:20;7264:27:4;;;;;;;;;;;;;:94;;:27;;:94;;:27;:94;:::i;:::-;-1:-1:-1;7264:94:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7394:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7394:66:4;;;;;;;7413:5;7394:66;;;;;;;;;;;;;;;;;;;;;;;7369:22;;-1:-1:-1;;;6122:24:20;;7369:9:4;;6162:11:20;;7369:22:4;;;;;;;;;;;;;:91;;:22;;:91;;:22;:91;:::i;:::-;-1:-1:-1;7369:91:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7501:76;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7501:76:4;;;;;;;7525:5;7501:76;;;;;;;;;;;;;;;;;;;;;;;7471:27;;-1:-1:-1;;;6386:29:20;;7471:9:4;;6440:2:20;6431:12;7471:27:4;;;;;;;;;;;;;:106;;:27;;:106;;:27;:106;:::i;:::-;-1:-1:-1;7471:106:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7619:65;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7619:65:4;;;;;;;7644:2;7619:65;;;;;;;;;;;;;;;;;;;;;;;7588:28;;-1:-1:-1;;;6656:30:20;;7588:9:4;;6711:2:20;6702:12;7588:28:4;;;;;;;;;;;;;:96;;:28;;:96;;:28;:96;:::i;:::-;-1:-1:-1;7588:96:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7734:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7767:2;7734:86;;;;;;;;;;;;;;;;;;;;;;;7695:36;;6939:25:20;6927:38;;7695:9:4;;6990:2:20;6981:12;7695:36:4;;;;;;;;;;;;;:125;;:36;;:125;;:36;:125;:::i;:::-;-1:-1:-1;7695:125:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7884:57:4;;;;;;;;;;;;;;;-1:-1:-1;;;7884:57:4;;;;;;7906:3;7884:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7856:25;;-1:-1:-1;;;7206:27:20;;7884:57:4;;-1:-1:-1;7856:9:4;;7249:12:20;7856:25:4;;;;;;;;;;;;;:85;;:25;;:85;;:25;:85;:::i;:::-;-1:-1:-1;7856:85:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;8036:20;254:28;246:37;;-1:-1:-1;;;;;8059:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8059:18:4;;;;;;;;;;;;:::i;:::-;8036:41;;8093:9;8088:113;8112:4;:11;8108:1;:15;8088:113;;;8178:4;8183:1;8178:7;;;;;;;;:::i;:::-;;;;;;;:11;;;8145:9;8155:4;8160:1;8155:7;;;;;;;;:::i;:::-;;;;;;;:12;;;8145:23;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;:44;;;;;;:::i;:::-;-1:-1:-1;8125:3:4;;;;:::i;:::-;;;;8088:113;;;;8218:1;8211:8;;;6076:2151;:::o;274:127:20:-;335:10;330:3;326:20;323:1;316:31;366:4;363:1;356:15;390:4;387:1;380:15;406:380;485:1;481:12;;;;528;;;549:61;;603:4;595:6;591:17;581:27;;549:61;656:2;648:6;645:14;625:18;622:38;619:161;;702:10;697:3;693:20;690:1;683:31;737:4;734:1;727:15;765:4;762:1;755:15;619:161;;406:380;;;:::o;917:545::-;1019:2;1014:3;1011:11;1008:448;;;1055:1;1080:5;1076:2;1069:17;1125:4;1121:2;1111:19;1195:2;1183:10;1179:19;1176:1;1172:27;1166:4;1162:38;1231:4;1219:10;1216:20;1213:47;;;-1:-1:-1;1254:4:20;1213:47;1309:2;1304:3;1300:12;1297:1;1293:20;1287:4;1283:31;1273:41;;1364:82;1382:2;1375:5;1372:13;1364:82;;;1427:17;;;1408:1;1397:13;1364:82;;;1368:3;;;1008:448;917:545;;;:::o;1638:1352::-;1758:10;;-1:-1:-1;;;;;1780:30:20;;1777:56;;;1813:18;;:::i;:::-;1842:97;1932:6;1892:38;1924:4;1918:11;1892:38;:::i;:::-;1886:4;1842:97;:::i;:::-;1994:4;;2058:2;2047:14;;2075:1;2070:663;;;;2777:1;2794:6;2791:89;;;-1:-1:-1;2846:19:20;;;2840:26;2791:89;-1:-1:-1;;1595:1:20;1591:11;;;1587:24;1583:29;1573:40;1619:1;1615:11;;;1570:57;2893:81;;2040:944;;2070:663;864:1;857:14;;;901:4;888:18;;-1:-1:-1;;2106:20:20;;;2224:236;2238:7;2235:1;2232:14;2224:236;;;2327:19;;;2321:26;2306:42;;2419:27;;;;2387:1;2375:14;;;;2254:19;;2224:236;;;2228:3;2488:6;2479:7;2476:19;2473:201;;;2549:19;;;2543:26;-1:-1:-1;;2632:1:20;2628:14;;;2644:3;2624:24;2620:37;2616:42;2601:58;2586:74;;2473:201;-1:-1:-1;;;;;2720:1:20;2704:14;;;2700:22;2687:36;;-1:-1:-1;1638:1352:20:o;7272:257::-;7344:4;7338:11;;;7376:17;;-1:-1:-1;;;;;7408:34:20;;7444:22;;;7405:62;7402:88;;;7470:18;;:::i;:::-;7506:4;7499:24;7272:257;:::o;7534:275::-;7605:2;7599:9;7670:2;7651:13;;-1:-1:-1;;7647:27:20;7635:40;;-1:-1:-1;;;;;7690:34:20;;7726:22;;;7687:62;7684:88;;;7752:18;;:::i;:::-;7788:2;7781:22;7534:275;;-1:-1:-1;7534:275:20:o;7814:250::-;7899:1;7909:113;7923:6;7920:1;7917:13;7909:113;;;7999:11;;;7993:18;7980:11;;;7973:39;7945:2;7938:10;7909:113;;;-1:-1:-1;;8056:1:20;8038:16;;8031:27;7814:250::o;8069:510::-;8123:5;8176:3;8169:4;8161:6;8157:17;8153:27;8143:55;;8194:1;8191;8184:12;8143:55;8217:13;;-1:-1:-1;;;;;8242:26:20;;8239:52;;;8271:18;;:::i;:::-;8315:55;8358:2;8339:13;;-1:-1:-1;;8335:27:20;8364:4;8331:38;8315:55;:::i;:::-;8395:2;8386:7;8379:19;8441:3;8434:4;8429:2;8421:6;8417:15;8413:26;8410:35;8407:55;;;8458:1;8455;8448:12;8407:55;8471:77;8545:2;8538:4;8529:7;8525:18;8518:4;8510:6;8506:17;8471:77;:::i;:::-;8566:7;8069:510;-1:-1:-1;;;;8069:510:20:o;8584:1909::-;8700:6;8731:2;8774;8762:9;8753:7;8749:23;8745:32;8742:52;;;8790:1;8787;8780:12;8742:52;8817:16;;-1:-1:-1;;;;;8882:14:20;;;8879:34;;;8909:1;8906;8899:12;8879:34;8947:6;8936:9;8932:22;8922:32;;8992:7;8985:4;8981:2;8977:13;8973:27;8963:55;;9014:1;9011;9004:12;8963:55;9043:2;9037:9;9065:2;9061;9058:10;9055:36;;;9071:18;;:::i;:::-;9117:2;9114:1;9110:10;9140:28;9164:2;9160;9156:11;9140:28;:::i;:::-;9202:15;;;9272:11;;;9268:20;;;9233:12;;;;9300:19;;;9297:39;;;9332:1;9329;9322:12;9297:39;9364:2;9360;9356:11;9345:22;;9376:1087;9392:6;9387:3;9384:15;9376:1087;;;9471:3;9465:10;9507:2;9494:11;9491:19;9488:109;;;9551:1;9580:2;9576;9569:14;9488:109;9620:20;;9663:4;9691:16;;;-1:-1:-1;;9687:30:20;9683:39;-1:-1:-1;9680:129:20;;;9763:1;9792:2;9788;9781:14;9680:129;9835:22;;:::i;:::-;9900:2;9896;9892:11;9886:18;9933:2;9923:8;9920:16;9917:109;;;9978:1;10008:3;10003;9996:16;9917:109;10053:65;10110:7;10105:2;10094:8;10090:2;10086:17;10082:26;10053:65;:::i;:::-;10039:80;;-1:-1:-1;10154:11:20;;;10148:18;;10182:16;;;10179:109;;;10240:1;10270:3;10265;10258:16;10179:109;10324:65;10381:7;10376:2;10365:8;10361:2;10357:17;10353:26;10324:65;:::i;:::-;10308:14;;;10301:89;10403:18;;-1:-1:-1;;9409:12:20;;;;10441;;;;9376:1087;;;10482:5;8584:1909;-1:-1:-1;;;;;;;;;8584:1909:20:o;10498:127::-;10559:10;10554:3;10550:20;10547:1;10540:31;10590:4;10587:1;10580:15;10614:4;10611:1;10604:15;10630:289;10761:3;10799:6;10793:13;10815:66;10874:6;10869:3;10862:4;10854:6;10850:17;10815:66;:::i;:::-;10897:16;;;;;10630:289;-1:-1:-1;;10630:289:20:o;10924:232::-;10963:3;10984:17;;;10981:140;;11043:10;11038:3;11034:20;11031:1;11024:31;11078:4;11075:1;11068:15;11106:4;11103:1;11096:15;10981:140;-1:-1:-1;11148:1:20;11137:13;;10924:232::o;:::-;129:773:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780630c848668146100715780637e5b7e0f14610079578063ba414fa614610081578063d637f3671461009d578063fa7626d4146100a5575b600080fd5b61006f6100b2565b005b61006f610105565b61006f6101da565b610089610330565b604051901515815260200160405180910390f35b61006f61045d565b6007546100899060ff1681565b600a6040516100c09061077d565b908152602001604051809103906000f0801580156100e2573d6000803e3d6000fd5b50601180546001600160a01b0319166001600160a01b0392909216919091179055565b60115460408051632a1f650b60e21b815290516000926001600160a01b03169163a87d942c9160048083019260209291908290030181865afa15801561014f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610173919061078b565b905061018081600a610547565b60408051818152600e818301526d02a3432903b30b63ab29034b99d160951b60608201526020810183905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a150565b601160009054906101000a90046001600160a01b03166001600160a01b031663f5c5ad836040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561022a57600080fd5b505af115801561023e573d6000803e3d6000fd5b50505050601160009054906101000a90046001600160a01b03166001600160a01b031663f5c5ad836040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561029257600080fd5b505af11580156102a6573d6000803e3d6000fd5b505050506000601160009054906101000a90046001600160a01b03166001600160a01b031663a87d942c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610323919061078b565b9050610180816008610547565b600754600090610100900460ff16156103525750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156104585760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916103e0917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016107d4565b60408051601f19818403018152908290526103fa916107f8565b6000604051808303816000865af19150503d8060008114610437576040519150601f19603f3d011682016040523d82523d6000602084013e61043c565b606091505b5091505080806020019051810190610454919061080b565b9150505b919050565b601160009054906101000a90046001600160a01b03166001600160a01b0316635b34b9666040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104ad57600080fd5b505af11580156104c1573d6000803e3d6000fd5b505050506000601160009054906101000a90046001600160a01b03166001600160a01b031663a87d942c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e919061078b565b905061018081600b5b80821461066d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105b79060208082526021908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e746040820152605d60f81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517f2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f1689181900360800190a161066d610671565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561076c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261070b92916020016107d4565b60408051601f1981840301815290829052610725916107f8565b6000604051808303816000865af19150503d8060008114610762576040519150601f19603f3d011682016040523d82523d6000602084013e610767565b606091505b505050505b6007805461ff001916610100179055565b610cb1806200082e83390190565b60006020828403121561079d57600080fd5b5051919050565b6000815160005b818110156107c557602081850181015186830152016107ab565b50600093019283525090919050565b6001600160e01b03198316815260006107f060048301846107a4565b949350505050565b600061080482846107a4565b9392505050565b60006020828403121561081d57600080fd5b8151801515811461080457600080fdfe608060405260405162000cb138038062000cb1833981016040819052620000269162000188565b6040518060400160405280600881526020016726a9102a37b5b2b760c11b8152506040518060400160405280600381526020016226aa2760e91b815250816003908162000074919062000246565b50600462000083828262000246565b505050620000a23369021e19e0c9bab2400000620000bd60201b60201c565b600680546001600160a01b031916331790556005556200033a565b6001600160a01b038216620001185760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012c919062000312565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b6000602082840312156200019b57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001cd57607f821691505b602082108103620001ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018357600081815260208120601f850160051c810160208610156200021d5750805b601f850160051c820191505b818110156200023e5782815560010162000229565b505050505050565b81516001600160401b03811115620002625762000262620001a2565b6200027a81620002738454620001b8565b84620001f4565b602080601f831160018114620002b25760008415620002995750858301515b600019600386901b1c1916600185901b1785556200023e565b600085815260208120601f198616915b82811015620002e357888601518255948401946001909101908401620002c2565b5085821015620003025787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200033457634e487b7160e01b600052601160045260246000fd5b92915050565b610967806200034a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101d8578063dd62ed3e146101eb578063f5c5ad83146101fe578063f851a4401461020657600080fd5b806370a082311461018c57806395d89b41146101b5578063a457c2d7146101bd578063a87d942c146101d057600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f5780635b34b9661461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610231565b60405161010f919061075a565b60405180910390f35b61012b6101263660046107c4565b6102c3565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046107ee565b6102dd565b6040516012815260200161010f565b61012b61017d3660046107c4565b610301565b61018a610323565b005b61013f61019a36600461082a565b6001600160a01b031660009081526020819052604090205490565b61010261033d565b61012b6101cb3660046107c4565b61034c565b60055461013f565b61012b6101e63660046107c4565b6103cc565b61013f6101f936600461084c565b6103da565b61018a610405565b600654610219906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6060600380546102409061087f565b80601f016020809104026020016040519081016040528092919081815260200182805461026c9061087f565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b6000336102d1818585610418565b60019150505b92915050565b6000336102eb85828561053c565b6102f68585856105b6565b506001949350505050565b6000336102d181858561031483836103da565b61031e91906108cf565b610418565b60016005600082825461033691906108e2565b9091555050565b6060600480546102409061087f565b6000338161035a82866103da565b9050838110156103bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102f68286868403610418565b6000336102d18185856105b6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600160056000828254610336919061090a565b6001600160a01b03831661047a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b6565b6001600160a01b0382166104db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061054884846103da565b905060001981146105b057818110156105a35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b6565b6105b08484848403610418565b50505050565b6001600160a01b03831661061a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b6565b6001600160a01b03821661067c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b6565b6001600160a01b038316600090815260208190526040902054818110156106f45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105b0565b600060208083528351808285015260005b818110156107875785810183015185820160400152820161076b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bf57600080fd5b919050565b600080604083850312156107d757600080fd5b6107e0836107a8565b946020939093013593505050565b60008060006060848603121561080357600080fd5b61080c846107a8565b925061081a602085016107a8565b9150604084013590509250925092565b60006020828403121561083c57600080fd5b610845826107a8565b9392505050565b6000806040838503121561085f57600080fd5b610868836107a8565b9150610876602084016107a8565b90509250929050565b600181811c9082168061089357607f821691505b6020821081036108b357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102d7576102d76108b9565b8082018281126000831280158216821582161715610902576109026108b9565b505092915050565b818103600083128015838313168383128216171561092a5761092a6108b9565b509291505056fea264697066735822122018ddc19a0c188211b67532eb9958cfa5af63610148fc631bfbb4c2ec3351b59d64736f6c63430008110033a2646970667358221220928ff795ebbf7573f172c333c2eef4018e7cf8124a2bdcf7ec1d322050ede92464736f6c63430008110033",
    "sourceMap": "129:773:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;192:69;;;:::i;:::-;;269:164;;;:::i;656:243::-;;;:::i;1865:600:0:-;;;:::i;:::-;;;179:14:20;;172:22;154:41;;142:2;127:18;1865:600:0;;;;;;;441:207:19;;;:::i;1609:26:0:-;;;;;;;;;192:69:19;250:2;236:17;;;;;:::i;:::-;360:25:20;;;348:2;333:18;236:17:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;226:7:19;:27;;-1:-1:-1;;;;;;226:27:19;-1:-1:-1;;;;;226:27:19;;;;;;;;;;192:69::o;269:164::-;322:7;;:18;;;-1:-1:-1;;;322:18:19;;;;310:9;;-1:-1:-1;;;;;322:7:19;;:16;;:18;;;;;;;;;;;;;;:7;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;310:30;;351:19;360:5;367:2;351:8;:19::i;:::-;386:37;;;794:21:20;;;851:2;831:18;;;824:30;-1:-1:-1;;;885:2:20;870:18;;863:44;974:4;959:20;;952:36;;;386:37:19;;;;;;;939:3:20;386:37:19;;;299:134;269:164::o;656:243::-;706:7;;;;;;;;;-1:-1:-1;;;;;706:7:19;-1:-1:-1;;;;;706:24:19;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:7;;;;;;;;;-1:-1:-1;;;;;743:7:19;-1:-1:-1;;;;;743:24:19;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:9;792:7;;;;;;;;;-1:-1:-1;;;;;792:7:19;-1:-1:-1;;;;;792:16:19;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;780:30;;821:17;830:5;836:1;821:8;:17::i;1865:600:0:-;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;3070:42;3058:55;3141:16;2031:382;;2251:43;;;1712:64;2251:43;;;1173:51:20;;;-1:-1:-1;;;1240:18:20;;;1233:34;2251:43:0;;;;;;;;;1146:18:20;;;2251:43:0;;;-1:-1:-1;;1712:64:0;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:0;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;441:207:19:-;490:7;;;;;;;;;-1:-1:-1;;;;;490:7:19;-1:-1:-1;;;;;490:24:19;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;527:9;539:7;;;;;;;;;-1:-1:-1;;;;;539:7:19;-1:-1:-1;;;;;539:16:19;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;527:30;;568:19;577:5;584:2;4901:264:0;4962:1;4957;:6;4953:205;;4985:40;;;;;2566:2:20;2548:21;;;2605:2;2585:18;;;2578:30;2644:34;2639:2;2624:18;;2617:62;-1:-1:-1;;;2710:2:20;2695:18;;2688:31;2751:3;2736:19;;2364:397;4985:40:0;;;;;;;;5045:30;;;2976:21:20;;;3033:2;3013:18;;;3006:30;-1:-1:-1;;;3067:2:20;3052:18;;3045:40;3152:4;3137:20;;3130:36;;;5045:30:0;;;;;;;3117:3:20;5045:30:0;;;5095;;;3387:21:20;;;3444:2;3424:18;;;3417:30;-1:-1:-1;;;3478:2:20;3463:18;;3456:40;3563:4;3548:20;;3541:36;;;5095:30:0;;;;;;;3528:3:20;5095:30:0;;;5140:6;:4;:6::i;:::-;4901:264;;:::o;2474:435::-;3070:42;3058:55;3141:16;2510:367;;2714:67;;;1712:64;2714:67;;;3790:51:20;;;-1:-1:-1;;;3857:18:20;;;3850:34;;;;2774:4:0;3900:18:20;;;3893:34;2548:11:0;;1712:64;2647:43;;3763:18:20;;2714:67:0;;;-1:-1:-1;;2714:67:0;;;;;;;;;;2601:199;;;2714:67;2601:199;;:::i;:::-;;;;-1:-1:-1;;2601:199:0;;;;;;;;;;2565:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2510:367:0;2887:7;:14;;-1:-1:-1;;2887:14:0;;;;;2474:435::o;-1:-1:-1:-;;;;;;;;:::o;396:183:20:-;465:6;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;-1:-1:-1;557:16:20;;396:183;-1:-1:-1;396:183:20:o;1278:322::-;1319:3;1357:5;1351:12;1381:1;1391:128;1405:6;1402:1;1399:13;1391:128;;;1502:4;1487:13;;;1483:24;;1477:31;1464:11;;;1457:52;1420:12;1391:128;;;-1:-1:-1;1574:1:20;1538:16;;1563:13;;;-1:-1:-1;1538:16:20;;1278:322;-1:-1:-1;1278:322:20:o;1605:278::-;-1:-1:-1;;;;;;1790:33:20;;1778:46;;1760:3;1840:37;1874:1;1865:11;;1857:6;1840:37;:::i;:::-;1833:44;1605:278;-1:-1:-1;;;;1605:278:20:o;1888:189::-;2017:3;2042:29;2067:3;2059:6;2042:29;:::i;:::-;2035:36;1888:189;-1:-1:-1;;;1888:189:20:o;2082:277::-;2149:6;2202:2;2190:9;2181:7;2177:23;2173:32;2170:52;;;2218:1;2215;2208:12;2170:52;2250:9;2244:16;2303:5;2296:13;2289:21;2282:5;2279:32;2269:60;;2325:1;2322;2315:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testDecrementCounter()": "7e5b7e0f",
    "testGetCount()": "0c848668",
    "testIncrementCounter()": "d637f367"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDecrementCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIncrementCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Excercise.t.sol\":\"ExcerciseTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":op/=lib/openzeppelin-contracts/\",\":remappings /= [\\\"op/=lib/openzeppelin-contracts\\\",\\\"@openzeppelin/=lib/openzeppelin-contracts\\\"]/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda\",\"dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0xc276cf7d0b941dde1a412d6cd70d78f61a31dcea03f57d823061683d37af1839\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac1f7675a4825fa8ef550605ad26d5092601988ad29ac27142f308dc81beaee6\",\"dweb:/ipfs/QmTszN3auPFHMJSuEtchamABFK1CbUetyK7Y3ZBUc6YBhK\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0x5050d616cac46c69c109812ce46ba605ea20bf96ea475ae5ae743c2fc6c17e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc9f6243c4a24ae48202d12905e811a05d882cf7716db557f4ee17fea7be1be8\",\"dweb:/ipfs/QmU9WYUUGTSmo7fA5Wt3pSdetC9yjUcNcdALqXR6a4JYFP\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x5f26e7cef96bca921f20e6482918adbaa01e61cf84ebd39ec785d59534ed4f89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a18004f368b4a23c2ac3bd7b2f24100a20572aa7d7d241ab37f90a45cefae39\",\"dweb:/ipfs/Qme5UoVfk6YLmNw8TgjQNfbMgacjrrs3xRpBXGxNZoRZTp\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3a0fee6d235886e0fa67c681a6bf20ca39bf23085cc70333ca4b921de75e0442\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb069551f3c4560b072f4e463c5e7287ec5a3a6e20f326e7163297f894ede650\",\"dweb:/ipfs/QmfZTfJfLsHzFEK5nYTVidjvHvgPbdagCD4qYCFjuq7C7m\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x3236a1b5b47cac399174f99fa3961e3a53f541b540e42ca9b4f9ff2d53c6a088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd76f67bd912efd3c22fd9f9cb5cc3438a1d074d487ad30af2c08f2fdc7c007d\",\"dweb:/ipfs/QmR5D78UscQCTmuMDfYGNGD6MU9JpWQSK5xivb7sM6kBkF\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb695da2cca968bab12c9b06cc4e9418f96f7150411039a6bb32fd58876ac4d9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44e64c156611f33e013603ae0d052632a089abaebabe0348142a276c68437649\",\"dweb:/ipfs/QmW2pnDcNT5jLgjAErUU5YssN6QvVVNpaRJ2VMjcLt2QbX\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xb1ff0f07cc0cf39e3c77aa3a101a71935918d08fe27ca2362a0fe00815117e31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ddea9a378183c65e3f3c6c2d2273472da30ab20f9b5303f253d066d6402b0b4\",\"dweb:/ipfs/QmXwdnaGb2ETQHZBa7oEpZjwM9XsMTQBeMJbLT52QGNnyU\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa102cd81ff3d77d6bc1e3d63993965b853182654fd06caba2955198fbf60de37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a06596543b3951889a5540ccc2b656ccc68e78145fb89bc9d0a05b662e35b035\",\"dweb:/ipfs/QmYLv38ZdHbAVuMDygscV7JPe4Kg41cXY4TGN4tfgSvn87\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x94b002c1ca7c8f89dbad4c4d62c77bb7cda17d67f5e4db9ac3fdb3eb2b4dad5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1537510454c7bb5e2be32bae6200c956d7f75ac672aa84e65db663d6e38ef25\",\"dweb:/ipfs/QmQyjK6dTnLY9R6aP2kL1UtbPMbionyqnJMz3Cgng7BZxX\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xd288b262abbf7f43e7aecc7a962dbdeba3edccc3025fffcb3f6c45268cbe0beb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed14924d6e31e599372a8ebb0c6d7d281b1addd9cc814ebe9ac350ce1194eea0\",\"dweb:/ipfs/QmWYq3dGZxFqe54UeU7s2PPtZWDBjNn3h2Wk1gmgHeWr2q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597\",\"dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"src/Excercise.sol\":{\"keccak256\":\"0x3ec81308780f63cf300b662e39a0d738cf7aee200400e71f2185394b96200ee3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f484e71d38cd7ace45f8b95da30addedfbc2ab45a0e5812b46f49dcdd0cf368a\",\"dweb:/ipfs/QmWSAok5ojPcNnTkA5nfUBmdx6cnbkA3j1kx5a5byuuUja\"]},\"test/Excercise.t.sol\":{\"keccak256\":\"0xdc69e7b0fab8e55e9c9344372923d0610217aeb8923af0f2cc36cc3bc5af481a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b658534f447b0d44df06b536c592929d965633c4bd6d658957db70ca6d4b40a4\",\"dweb:/ipfs/QmeDbK7sVBoDpSTQCyN6hN494kYddASCwnDjf3Rc8uV6ei\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDecrementCounter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetCount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIncrementCounter"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":op/=lib/openzeppelin-contracts/",
        ":remappings /= [\"op/=lib/openzeppelin-contracts\",\"@openzeppelin/=lib/openzeppelin-contracts\"]/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Excercise.t.sol": "ExcerciseTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e",
        "urls": [
          "bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda",
          "dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0xc276cf7d0b941dde1a412d6cd70d78f61a31dcea03f57d823061683d37af1839",
        "urls": [
          "bzz-raw://ac1f7675a4825fa8ef550605ad26d5092601988ad29ac27142f308dc81beaee6",
          "dweb:/ipfs/QmTszN3auPFHMJSuEtchamABFK1CbUetyK7Y3ZBUc6YBhK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0x5050d616cac46c69c109812ce46ba605ea20bf96ea475ae5ae743c2fc6c17e98",
        "urls": [
          "bzz-raw://fc9f6243c4a24ae48202d12905e811a05d882cf7716db557f4ee17fea7be1be8",
          "dweb:/ipfs/QmU9WYUUGTSmo7fA5Wt3pSdetC9yjUcNcdALqXR6a4JYFP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x5f26e7cef96bca921f20e6482918adbaa01e61cf84ebd39ec785d59534ed4f89",
        "urls": [
          "bzz-raw://3a18004f368b4a23c2ac3bd7b2f24100a20572aa7d7d241ab37f90a45cefae39",
          "dweb:/ipfs/Qme5UoVfk6YLmNw8TgjQNfbMgacjrrs3xRpBXGxNZoRZTp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3a0fee6d235886e0fa67c681a6bf20ca39bf23085cc70333ca4b921de75e0442",
        "urls": [
          "bzz-raw://bb069551f3c4560b072f4e463c5e7287ec5a3a6e20f326e7163297f894ede650",
          "dweb:/ipfs/QmfZTfJfLsHzFEK5nYTVidjvHvgPbdagCD4qYCFjuq7C7m"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x3236a1b5b47cac399174f99fa3961e3a53f541b540e42ca9b4f9ff2d53c6a088",
        "urls": [
          "bzz-raw://cd76f67bd912efd3c22fd9f9cb5cc3438a1d074d487ad30af2c08f2fdc7c007d",
          "dweb:/ipfs/QmR5D78UscQCTmuMDfYGNGD6MU9JpWQSK5xivb7sM6kBkF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb695da2cca968bab12c9b06cc4e9418f96f7150411039a6bb32fd58876ac4d9c",
        "urls": [
          "bzz-raw://44e64c156611f33e013603ae0d052632a089abaebabe0348142a276c68437649",
          "dweb:/ipfs/QmW2pnDcNT5jLgjAErUU5YssN6QvVVNpaRJ2VMjcLt2QbX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xb1ff0f07cc0cf39e3c77aa3a101a71935918d08fe27ca2362a0fe00815117e31",
        "urls": [
          "bzz-raw://6ddea9a378183c65e3f3c6c2d2273472da30ab20f9b5303f253d066d6402b0b4",
          "dweb:/ipfs/QmXwdnaGb2ETQHZBa7oEpZjwM9XsMTQBeMJbLT52QGNnyU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa102cd81ff3d77d6bc1e3d63993965b853182654fd06caba2955198fbf60de37",
        "urls": [
          "bzz-raw://a06596543b3951889a5540ccc2b656ccc68e78145fb89bc9d0a05b662e35b035",
          "dweb:/ipfs/QmYLv38ZdHbAVuMDygscV7JPe4Kg41cXY4TGN4tfgSvn87"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x94b002c1ca7c8f89dbad4c4d62c77bb7cda17d67f5e4db9ac3fdb3eb2b4dad5e",
        "urls": [
          "bzz-raw://e1537510454c7bb5e2be32bae6200c956d7f75ac672aa84e65db663d6e38ef25",
          "dweb:/ipfs/QmQyjK6dTnLY9R6aP2kL1UtbPMbionyqnJMz3Cgng7BZxX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xd288b262abbf7f43e7aecc7a962dbdeba3edccc3025fffcb3f6c45268cbe0beb",
        "urls": [
          "bzz-raw://ed14924d6e31e599372a8ebb0c6d7d281b1addd9cc814ebe9ac350ce1194eea0",
          "dweb:/ipfs/QmWYq3dGZxFqe54UeU7s2PPtZWDBjNn3h2Wk1gmgHeWr2q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c",
        "urls": [
          "bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597",
          "dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "src/Excercise.sol": {
        "keccak256": "0x3ec81308780f63cf300b662e39a0d738cf7aee200400e71f2185394b96200ee3",
        "urls": [
          "bzz-raw://f484e71d38cd7ace45f8b95da30addedfbc2ab45a0e5812b46f49dcdd0cf368a",
          "dweb:/ipfs/QmWSAok5ojPcNnTkA5nfUBmdx6cnbkA3j1kx5a5byuuUja"
        ],
        "license": "GPL-3.0"
      },
      "test/Excercise.t.sol": {
        "keccak256": "0xdc69e7b0fab8e55e9c9344372923d0610217aeb8923af0f2cc36cc3bc5af481a",
        "urls": [
          "bzz-raw://b658534f447b0d44df06b536c592929d965633c4bd6d658957db70ca6d4b40a4",
          "dweb:/ipfs/QmeDbK7sVBoDpSTQCyN6hN494kYddASCwnDjf3Rc8uV6ei"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Excercise.t.sol",
    "id": 25532,
    "exportedSymbols": {
      "CommonBase": [
        1818
      ],
      "Context": [
        25371
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        25246
      ],
      "Excercise": [
        25434
      ],
      "ExcerciseTest": [
        25531
      ],
      "IERC20": [
        25324
      ],
      "IERC20Metadata": [
        25349
      ],
      "StdAssertions": [
        2644
      ],
      "StdCheats": [
        4757
      ],
      "StdStorage": [
        5662
      ],
      "StdUtils": [
        7525
      ],
      "Test": [
        7556
      ],
      "TestBase": [
        7545
      ],
      "Vm": [
        8530
      ],
      "console": [
        16594
      ],
      "console2": [
        24659
      ],
      "stdError": [
        4823
      ],
      "stdJson": [
        5489
      ],
      "stdMath": [
        5631
      ],
      "stdStorage": [
        7096
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:958:19",
    "nodes": [
      {
        "id": 25436,
        "nodeType": "PragmaDirective",
        "src": "40:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 25437,
        "nodeType": "ImportDirective",
        "src": "68:28:19",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25532,
        "sourceUnit": 7557,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25438,
        "nodeType": "ImportDirective",
        "src": "98:27:19",
        "nodes": [],
        "absolutePath": "src/Excercise.sol",
        "file": "src/Excercise.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25532,
        "sourceUnit": 25435,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25531,
        "nodeType": "ContractDefinition",
        "src": "129:773:19",
        "nodes": [
          {
            "id": 25443,
            "nodeType": "VariableDeclaration",
            "src": "166:17:19",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "176:7:19",
            "scope": 25531,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Excercise_$25434",
              "typeString": "contract Excercise"
            },
            "typeName": {
              "id": 25442,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25441,
                "name": "Excercise",
                "nameLocations": [
                  "166:9:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25434,
                "src": "166:9:19"
              },
              "referencedDeclaration": 25434,
              "src": "166:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Excercise_$25434",
                "typeString": "contract Excercise"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25455,
            "nodeType": "FunctionDefinition",
            "src": "192:69:19",
            "nodes": [],
            "body": {
              "id": 25454,
              "nodeType": "Block",
              "src": "215:46:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25446,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25443,
                      "src": "226:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Excercise_$25434",
                        "typeString": "contract Excercise"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 25450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "250:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 25449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "236:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_int256_$returns$_t_contract$_Excercise_$25434_$",
                          "typeString": "function (int256) payable returns (contract Excercise)"
                        },
                        "typeName": {
                          "id": 25448,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25447,
                            "name": "Excercise",
                            "nameLocations": [
                              "240:9:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25434,
                            "src": "240:9:19"
                          },
                          "referencedDeclaration": 25434,
                          "src": "240:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Excercise_$25434",
                            "typeString": "contract Excercise"
                          }
                        }
                      },
                      "id": 25451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "236:17:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Excercise_$25434",
                        "typeString": "contract Excercise"
                      }
                    },
                    "src": "226:27:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Excercise_$25434",
                      "typeString": "contract Excercise"
                    }
                  },
                  "id": 25453,
                  "nodeType": "ExpressionStatement",
                  "src": "226:27:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "201:5:19",
            "parameters": {
              "id": 25444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "206:2:19"
            },
            "returnParameters": {
              "id": 25445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:0:19"
            },
            "scope": 25531,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25475,
            "nodeType": "FunctionDefinition",
            "src": "269:164:19",
            "nodes": [],
            "body": {
              "id": 25474,
              "nodeType": "Block",
              "src": "299:134:19",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    25459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25459,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "314:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25474,
                      "src": "310:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 25458,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "310:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25463,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25460,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25443,
                        "src": "322:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Excercise_$25434",
                          "typeString": "contract Excercise"
                        }
                      },
                      "id": 25461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "330:8:19",
                      "memberName": "getCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25433,
                      "src": "322:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                        "typeString": "function () view external returns (int256)"
                      }
                    },
                    "id": 25462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "322:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "310:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25465,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25459,
                        "src": "360:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 25466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "367:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 25464,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 459,
                      "src": "351:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 25467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "351:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25468,
                  "nodeType": "ExpressionStatement",
                  "src": "351:19:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652076616c75652069733a20",
                        "id": 25470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "400:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        "value": "The value is: "
                      },
                      {
                        "id": 25471,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25459,
                        "src": "417:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 25469,
                      "name": "log_named_int",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "386:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$",
                        "typeString": "function (string memory,int256)"
                      }
                    },
                    "id": 25472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "386:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25473,
                  "nodeType": "EmitStatement",
                  "src": "381:42:19"
                }
              ]
            },
            "functionSelector": "0c848668",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetCount",
            "nameLocation": "278:12:19",
            "parameters": {
              "id": 25456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:19"
            },
            "returnParameters": {
              "id": 25457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:0:19"
            },
            "scope": 25531,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25500,
            "nodeType": "FunctionDefinition",
            "src": "441:207:19",
            "nodes": [],
            "body": {
              "id": 25499,
              "nodeType": "Block",
              "src": "479:169:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25478,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25443,
                        "src": "490:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Excercise_$25434",
                          "typeString": "contract Excercise"
                        }
                      },
                      "id": 25480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "498:16:19",
                      "memberName": "incrementCounter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25417,
                      "src": "490:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25482,
                  "nodeType": "ExpressionStatement",
                  "src": "490:26:19"
                },
                {
                  "assignments": [
                    25484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25484,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "531:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25499,
                      "src": "527:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 25483,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "527:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25488,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25485,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25443,
                        "src": "539:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Excercise_$25434",
                          "typeString": "contract Excercise"
                        }
                      },
                      "id": 25486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "547:8:19",
                      "memberName": "getCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25433,
                      "src": "539:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                        "typeString": "function () view external returns (int256)"
                      }
                    },
                    "id": 25487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "527:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25490,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25484,
                        "src": "577:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "3131",
                        "id": 25491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "584:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        }
                      ],
                      "id": 25489,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 459,
                      "src": "568:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 25492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25493,
                  "nodeType": "ExpressionStatement",
                  "src": "568:19:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652076616c75652069733a20",
                        "id": 25495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "617:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        "value": "The value is: "
                      },
                      {
                        "id": 25496,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25484,
                        "src": "634:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 25494,
                      "name": "log_named_int",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "603:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$",
                        "typeString": "function (string memory,int256)"
                      }
                    },
                    "id": 25497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "603:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25498,
                  "nodeType": "EmitStatement",
                  "src": "598:42:19"
                }
              ]
            },
            "functionSelector": "d637f367",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIncrementCounter",
            "nameLocation": "450:20:19",
            "parameters": {
              "id": 25476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:19"
            },
            "returnParameters": {
              "id": 25477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:19"
            },
            "scope": 25531,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25530,
            "nodeType": "FunctionDefinition",
            "src": "656:243:19",
            "nodes": [],
            "body": {
              "id": 25529,
              "nodeType": "Block",
              "src": "695:204:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25503,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25443,
                        "src": "706:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Excercise_$25434",
                          "typeString": "contract Excercise"
                        }
                      },
                      "id": 25505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "714:16:19",
                      "memberName": "decrementCounter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25425,
                      "src": "706:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25507,
                  "nodeType": "ExpressionStatement",
                  "src": "706:26:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25508,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25443,
                        "src": "743:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Excercise_$25434",
                          "typeString": "contract Excercise"
                        }
                      },
                      "id": 25510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "751:16:19",
                      "memberName": "decrementCounter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25425,
                      "src": "743:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25512,
                  "nodeType": "ExpressionStatement",
                  "src": "743:26:19"
                },
                {
                  "assignments": [
                    25514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25514,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "784:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25529,
                      "src": "780:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 25513,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "780:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25518,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25515,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25443,
                        "src": "792:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Excercise_$25434",
                          "typeString": "contract Excercise"
                        }
                      },
                      "id": 25516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "800:8:19",
                      "memberName": "getCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25433,
                      "src": "792:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                        "typeString": "function () view external returns (int256)"
                      }
                    },
                    "id": 25517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:18:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "780:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25520,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25514,
                        "src": "830:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "38",
                        "id": 25521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "id": 25519,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 459,
                      "src": "821:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 25522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25523,
                  "nodeType": "ExpressionStatement",
                  "src": "821:17:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "5468652076616c75652069733a20",
                        "id": 25525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "868:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        "value": "The value is: "
                      },
                      {
                        "id": 25526,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25514,
                        "src": "885:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edaeeef75bfe3cd62f9480d61381296ae58d28a0fd02e9a5500648766761c9e9",
                          "typeString": "literal_string \"The value is: \""
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 25524,
                      "name": "log_named_int",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "854:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$",
                        "typeString": "function (string memory,int256)"
                      }
                    },
                    "id": 25527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25528,
                  "nodeType": "EmitStatement",
                  "src": "849:42:19"
                }
              ]
            },
            "functionSelector": "7e5b7e0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDecrementCounter",
            "nameLocation": "665:20:19",
            "parameters": {
              "id": 25501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "685:2:19"
            },
            "returnParameters": {
              "id": 25502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:0:19"
            },
            "scope": 25531,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25439,
              "name": "Test",
              "nameLocations": [
                "155:4:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7556,
              "src": "155:4:19"
            },
            "id": 25440,
            "nodeType": "InheritanceSpecifier",
            "src": "155:4:19"
          }
        ],
        "canonicalName": "ExcerciseTest",
        "contractDependencies": [
          25434
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25531,
          7556,
          7525,
          4757,
          4368,
          2644,
          1786,
          7545,
          1818
        ],
        "name": "ExcerciseTest",
        "nameLocation": "138:13:19",
        "scope": 25532,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 19
}