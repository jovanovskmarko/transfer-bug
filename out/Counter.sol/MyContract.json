{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x600b60809081526a26b0b935b7902a37b5b2b760a91b60a052610100604052600360c08181526226aa2760e91b60e052906200003c8382620001f1565b5060046200004b8282620001f1565b5050506200006a3369021e19e0c9bab24000006200008260201b60201c565b600580546001600160a01b03191633179055620002e5565b6001600160a01b038216620000dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f19190620002bd565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017857607f821691505b6020821081036200019957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014857600081815260208120601f850160051c81016020861015620001c85750805b601f850160051c820191505b81811015620001e957828155600101620001d4565b505050505050565b81516001600160401b038111156200020d576200020d6200014d565b62000225816200021e845462000163565b846200019f565b602080601f8311600181146200025d5760008415620002445750858301515b600019600386901b1c1916600185901b178555620001e9565b600085815260208120601f198616915b828110156200028e578886015182559484019460019091019084016200026d565b5085821015620002ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620002df57634e487b7160e01b600052601160045260246000fd5b92915050565b610b4b80620002f56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c578063a457c2d711610066578063a457c2d7146101d0578063a9059cbb146101e3578063dd62ed3e146101f6578063f851a4401461020957600080fd5b806342966c681461018c57806370a082311461019f57806395d89b41146101c857600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610234565b604051610104919061097c565b60405180910390f35b61012061011b3660046109e6565b6102c6565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610a10565b6102e0565b60405160128152602001610104565b6101206101723660046109e6565b610304565b61018a6101853660046109e6565b610326565b005b61018a61019a366004610a4c565b610380565b6101346101ad366004610a65565b6001600160a01b031660009081526020819052604090205490565b6100f761038d565b6101206101de3660046109e6565b61039c565b6101206101f13660046109e6565b610417565b610134610204366004610a87565b610425565b60055461021c906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b60606003805461024390610aba565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610aba565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b5050505050905090565b6000336102d4818585610450565b60019150505b92915050565b6000336102ee858285610575565b6102f98585856105ef565b506001949350505050565b6000336102d48185856103178383610425565b6103219190610af4565b610450565b6005546001600160a01b031633146103725760405162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b60448201526064015b60405180910390fd5b61037c8282610793565b5050565b61038a3382610852565b50565b60606004805461024390610aba565b600033816103aa8286610425565b90508381101561040a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610369565b6102f98286868403610450565b6000336102d48185856105ef565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610369565b6001600160a01b0382166105135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610369565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105818484610425565b905060001981146105e957818110156105dc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610369565b6105e98484848403610450565b50505050565b6001600160a01b0383166106535760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610369565b6001600160a01b0382166106b55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610369565b6001600160a01b0383166000908152602081905260409020548181101561072d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610369565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105e9565b6001600160a01b0382166107e95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610369565b80600260008282546107fb9190610af4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108b25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610369565b6001600160a01b038216600090815260208190526040902054818110156109265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610369565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610568565b600060208083528351808285015260005b818110156109a95785810183015185820160400152820161098d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109e157600080fd5b919050565b600080604083850312156109f957600080fd5b610a02836109ca565b946020939093013593505050565b600080600060608486031215610a2557600080fd5b610a2e846109ca565b9250610a3c602085016109ca565b9150604084013590509250925092565b600060208284031215610a5e57600080fd5b5035919050565b600060208284031215610a7757600080fd5b610a80826109ca565b9392505050565b60008060408385031215610a9a57600080fd5b610aa3836109ca565b9150610ab1602084016109ca565b90509250929050565b600181811c90821680610ace57607f821691505b602082108103610aee57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102da57634e487b7160e01b600052601160045260246000fdfea26469706673582212200d8cae2b3418591505999364ae8c4b3e66e8f78682052423a89d181ee56db9e264736f6c63430008110033",
    "sourceMap": "2029:116:14:-:0;117:614:19;2029:116:14;;;-1:-1:-1;;;2029:116:14;;;117:614:19;2029:116:14;;;;;;-1:-1:-1;;;2029:116:14;;;2096:13;117:614:19;2029:116:14;2096:13;:::i;:::-;-1:-1:-1;2120:7:14;:17;2130:7;2120;:17;:::i;:::-;;2029:116;;236:34:19::1;242:10;253:16;236:5;;;:34;;:::i;:::-;280:5;:18:::0;;-1:-1:-1;;;;;;280:18:19::1;288:10;280:18;::::0;;117:614;;8825:548:14;-1:-1:-1;;;;;8909:21:14;;8901:65;;;;-1:-1:-1;;;8901:65:14;;2937:2:21;8901:65:14;;;2919:21:21;2976:2;2956:18;;;2949:30;3015:33;2995:18;;;2988:61;3066:18;;8901:65:14;;;;;;;;9057:6;9041:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9212:18:14;;:9;:18;;;;;;;;;;;:28;;;;;;9267:37;3468:25:21;;;9267:37:14;;3441:18:21;9267:37:14;;;;;;;8825:548;;:::o;12543:125::-;;;;:::o;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:21;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:21;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:21;;;2580:26;2531:89;-1:-1:-1;;1335:1:21;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:21;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:21;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:21;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:21:o;3095:222::-;3160:9;;;3181:10;;;3178:133;;;3233:10;3228:3;3224:20;3221:1;3214:31;3268:4;3265:1;3258:15;3296:4;3293:1;3286:15;3178:133;3095:222;;;;:::o;3322:177::-;117:614:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c578063a457c2d711610066578063a457c2d7146101d0578063a9059cbb146101e3578063dd62ed3e146101f6578063f851a4401461020957600080fd5b806342966c681461018c57806370a082311461019f57806395d89b41146101c857600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610234565b604051610104919061097c565b60405180910390f35b61012061011b3660046109e6565b6102c6565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610a10565b6102e0565b60405160128152602001610104565b6101206101723660046109e6565b610304565b61018a6101853660046109e6565b610326565b005b61018a61019a366004610a4c565b610380565b6101346101ad366004610a65565b6001600160a01b031660009081526020819052604090205490565b6100f761038d565b6101206101de3660046109e6565b61039c565b6101206101f13660046109e6565b610417565b610134610204366004610a87565b610425565b60055461021c906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b60606003805461024390610aba565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610aba565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b5050505050905090565b6000336102d4818585610450565b60019150505b92915050565b6000336102ee858285610575565b6102f98585856105ef565b506001949350505050565b6000336102d48185856103178383610425565b6103219190610af4565b610450565b6005546001600160a01b031633146103725760405162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b60448201526064015b60405180910390fd5b61037c8282610793565b5050565b61038a3382610852565b50565b60606004805461024390610aba565b600033816103aa8286610425565b90508381101561040a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610369565b6102f98286868403610450565b6000336102d48185856105ef565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610369565b6001600160a01b0382166105135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610369565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105818484610425565b905060001981146105e957818110156105dc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610369565b6105e98484848403610450565b50505050565b6001600160a01b0383166106535760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610369565b6001600160a01b0382166106b55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610369565b6001600160a01b0383166000908152602081905260409020548181101561072d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610369565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105e9565b6001600160a01b0382166107e95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610369565b80600260008282546107fb9190610af4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108b25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610369565b6001600160a01b038216600090815260208190526040902054818110156109265760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610369565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610568565b600060208083528351808285015260005b818110156109a95785810183015185820160400152820161098d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109e157600080fd5b919050565b600080604083850312156109f957600080fd5b610a02836109ca565b946020939093013593505050565b600080600060608486031215610a2557600080fd5b610a2e846109ca565b9250610a3c602085016109ca565b9150604084013590509250925092565b600060208284031215610a5e57600080fd5b5035919050565b600060208284031215610a7757600080fd5b610a80826109ca565b9392505050565b60008060408385031215610a9a57600080fd5b610aa3836109ca565b9150610ab1602084016109ca565b90509250929050565b600181811c90821680610ace57607f821691505b602082108103610aee57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102da57634e487b7160e01b600052601160045260246000fdfea26469706673582212200d8cae2b3418591505999364ae8c4b3e66e8f78682052423a89d181ee56db9e264736f6c63430008110033",
    "sourceMap": "117:614:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:100:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4566:201;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:21;;1162:22;1144:41;;1132:2;1117:18;4566:201:14;1004:187:21;3335:108:14;3423:12;;3335:108;;;1342:25:21;;;1330:2;1315:18;3335:108:14;1196:177:21;5347:295:14;;;;;;:::i;:::-;;:::i;3177:93::-;;;3260:2;1853:36:21;;1841:2;1826:18;3177:93:14;1711:184:21;6051:238:14;;;;;;:::i;:::-;;:::i;367:131:19:-;;;;;;:::i;:::-;;:::i;:::-;;619:76;;;;;;:::i;:::-;;:::i;3506:127:14:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3607:18:14;3580:7;3607:18;;;;;;;;;;;;3506:127;2434:104;;;:::i;6792:436::-;;;;;;:::i;:::-;;:::i;3839:193::-;;;;;;:::i;:::-;;:::i;4095:151::-;;;;;;:::i;:::-;;:::i;151:20:19:-;;;;;-1:-1:-1;;;;;151:20:19;;;;;;-1:-1:-1;;;;;2705:32:21;;;2687:51;;2675:2;2660:18;151:20:19;2541:203:21;2215:100:14;2269:13;2302:5;2295:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2215:100;:::o;4566:201::-;4649:4;736:10:17;4705:32:14;736:10:17;4721:7:14;4730:6;4705:8;:32::i;:::-;4755:4;4748:11;;;4566:201;;;;;:::o;5347:295::-;5478:4;736:10:17;5536:38:14;5552:4;736:10:17;5567:6:14;5536:15;:38::i;:::-;5585:27;5595:4;5601:2;5605:6;5585:9;:27::i;:::-;-1:-1:-1;5630:4:14;;5347:295;-1:-1:-1;;;;5347:295:14:o;6051:238::-;6139:4;736:10:17;6195:64:14;736:10:17;6211:7:14;6248:10;6220:25;736:10:17;6211:7:14;6220:9;:25::i;:::-;:38;;;;:::i;:::-;6195:8;:64::i;367:131:19:-;446:5;;-1:-1:-1;;;;;446:5:19;432:10;:19;424:41;;;;-1:-1:-1;;;424:41:19;;3563:2:21;424:41:19;;;3545:21:21;3602:2;3582:18;;;3575:30;-1:-1:-1;;;3621:18:21;;;3614:40;3671:18;;424:41:19;;;;;;;;;475:16;481:2;484:6;475:5;:16::i;:::-;367:131;;:::o;619:76::-;664:24;670:10;681:6;664:5;:24::i;:::-;619:76;:::o;2434:104:14:-;2490:13;2523:7;2516:14;;;;;:::i;6792:436::-;6885:4;736:10:17;6885:4:14;6968:25;736:10:17;6985:7:14;6968:9;:25::i;:::-;6941:52;;7032:15;7012:16;:35;;7004:85;;;;-1:-1:-1;;;7004:85:14;;3902:2:21;7004:85:14;;;3884:21:21;3941:2;3921:18;;;3914:30;3980:34;3960:18;;;3953:62;-1:-1:-1;;;4031:18:21;;;4024:35;4076:19;;7004:85:14;3700:401:21;7004:85:14;7125:60;7134:5;7141:7;7169:15;7150:16;:34;7125:8;:60::i;3839:193::-;3918:4;736:10:17;3974:28:14;736:10:17;3991:2:14;3995:6;3974:9;:28::i;4095:151::-;-1:-1:-1;;;;;4211:18:14;;;4184:7;4211:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4095:151::o;10819:380::-;-1:-1:-1;;;;;10955:19:14;;10947:68;;;;-1:-1:-1;;;10947:68:14;;4308:2:21;10947:68:14;;;4290:21:21;4347:2;4327:18;;;4320:30;4386:34;4366:18;;;4359:62;-1:-1:-1;;;4437:18:21;;;4430:34;4481:19;;10947:68:14;4106:400:21;10947:68:14;-1:-1:-1;;;;;11034:21:14;;11026:68;;;;-1:-1:-1;;;11026:68:14;;4713:2:21;11026:68:14;;;4695:21:21;4752:2;4732:18;;;4725:30;4791:34;4771:18;;;4764:62;-1:-1:-1;;;4842:18:21;;;4835:32;4884:19;;11026:68:14;4511:398:21;11026:68:14;-1:-1:-1;;;;;11107:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11159:32;;1342:25:21;;;11159:32:14;;1315:18:21;11159:32:14;;;;;;;;10819:380;;;:::o;11490:453::-;11625:24;11652:25;11662:5;11669:7;11652:9;:25::i;:::-;11625:52;;-1:-1:-1;;11692:16:14;:37;11688:248;;11774:6;11754:16;:26;;11746:68;;;;-1:-1:-1;;;11746:68:14;;5116:2:21;11746:68:14;;;5098:21:21;5155:2;5135:18;;;5128:30;5194:31;5174:18;;;5167:59;5243:18;;11746:68:14;4914:353:21;11746:68:14;11858:51;11867:5;11874:7;11902:6;11883:16;:25;11858:8;:51::i;:::-;11614:329;11490:453;;;:::o;7698:840::-;-1:-1:-1;;;;;7829:18:14;;7821:68;;;;-1:-1:-1;;;7821:68:14;;5474:2:21;7821:68:14;;;5456:21:21;5513:2;5493:18;;;5486:30;5552:34;5532:18;;;5525:62;-1:-1:-1;;;5603:18:21;;;5596:35;5648:19;;7821:68:14;5272:401:21;7821:68:14;-1:-1:-1;;;;;7908:16:14;;7900:64;;;;-1:-1:-1;;;7900:64:14;;5880:2:21;7900:64:14;;;5862:21:21;5919:2;5899:18;;;5892:30;5958:34;5938:18;;;5931:62;-1:-1:-1;;;6009:18:21;;;6002:33;6052:19;;7900:64:14;5678:399:21;7900:64:14;-1:-1:-1;;;;;8050:15:14;;8028:19;8050:15;;;;;;;;;;;8084:21;;;;8076:72;;;;-1:-1:-1;;;8076:72:14;;6284:2:21;8076:72:14;;;6266:21:21;6323:2;6303:18;;;6296:30;6362:34;6342:18;;;6335:62;-1:-1:-1;;;6413:18:21;;;6406:36;6459:19;;8076:72:14;6082:402:21;8076:72:14;-1:-1:-1;;;;;8184:15:14;;;:9;:15;;;;;;;;;;;8202:20;;;8184:38;;8402:13;;;;;;;;;;:23;;;;;;8454:26;;1342:25:21;;;8402:13:14;;8454:26;;1315:18:21;8454:26:14;;;;;;;8493:37;9706:675;8825:548;-1:-1:-1;;;;;8909:21:14;;8901:65;;;;-1:-1:-1;;;8901:65:14;;6691:2:21;8901:65:14;;;6673:21:21;6730:2;6710:18;;;6703:30;6769:33;6749:18;;;6742:61;6820:18;;8901:65:14;6489:355:21;8901:65:14;9057:6;9041:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9212:18:14;;:9;:18;;;;;;;;;;;:28;;;;;;9267:37;1342:25:21;;;9267:37:14;;1315:18:21;9267:37:14;;;;;;;367:131:19;;:::o;9706:675:14:-;-1:-1:-1;;;;;9790:21:14;;9782:67;;;;-1:-1:-1;;;9782:67:14;;7051:2:21;9782:67:14;;;7033:21:21;7090:2;7070:18;;;7063:30;7129:34;7109:18;;;7102:62;-1:-1:-1;;;7180:18:21;;;7173:31;7221:19;;9782:67:14;6849:397:21;9782:67:14;-1:-1:-1;;;;;9949:18:14;;9924:22;9949:18;;;;;;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:14;;7453:2:21;9978:71:14;;;7435:21:21;7492:2;7472:18;;;7465:30;7531:34;7511:18;;;7504:62;-1:-1:-1;;;7582:18:21;;;7575:32;7624:19;;9978:71:14;7251:398:21;9978:71:14;-1:-1:-1;;;;;10085:18:14;;:9;:18;;;;;;;;;;;10106:23;;;10085:44;;10224:12;:22;;;;;;;10275:37;1342:25:21;;;10085:9:14;;:18;10275:37;;1315:18:21;10275:37:14;1196:177:21;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:21;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:21:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:21;;1900:180;-1:-1:-1;1900:180:21:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:21:o;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Counter.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":op/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597\",\"dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"src/Counter.sol\":{\"keccak256\":\"0x973b971067c72a57da01f9f985c9baedc2c0effa2f5dfb7c870729133955959a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0be8c281a5bd574667af5122e8f6cb38e74a87b801fb389185d258884df5f6f7\",\"dweb:/ipfs/QmPBKpgMyqmYCaDh1EWpuLkVQkwzTwZiPN3SuwQmDFeKQy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":op/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Counter.sol": "MyContract"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x7138baa2520f7c1d6943ce6e53192d8eae5b50bf4b27dd602f8b27144987f70c",
        "urls": [
          "bzz-raw://c616140f2b008385f0bffd7915ce7ce45c1e2bba201318b89d44073e36514597",
          "dweb:/ipfs/QmdsoxHZ326dnUKNYKahgNAj8wsJH111JrQsKHz6CkVBy7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "src/Counter.sol": {
        "keccak256": "0x973b971067c72a57da01f9f985c9baedc2c0effa2f5dfb7c870729133955959a",
        "urls": [
          "bzz-raw://0be8c281a5bd574667af5122e8f6cb38e74a87b801fb389185d258884df5f6f7",
          "dweb:/ipfs/QmPBKpgMyqmYCaDh1EWpuLkVQkwzTwZiPN3SuwQmDFeKQy"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Counter.sol",
    "id": 25457,
    "exportedSymbols": {
      "Context": [
        25373
      ],
      "ERC20": [
        25248
      ],
      "IERC20": [
        25326
      ],
      "IERC20Metadata": [
        25351
      ],
      "MyContract": [
        25456
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:695:19",
    "nodes": [
      {
        "id": 25394,
        "nodeType": "PragmaDirective",
        "src": "36:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 25395,
        "nodeType": "ImportDirective",
        "src": "60:55:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25457,
        "sourceUnit": 25249,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25456,
        "nodeType": "ContractDefinition",
        "src": "117:614:19",
        "nodes": [
          {
            "id": 25399,
            "nodeType": "VariableDeclaration",
            "src": "151:20:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "166:5:19",
            "scope": 25456,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25398,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25422,
            "nodeType": "FunctionDefinition",
            "src": "178:127:19",
            "nodes": [],
            "body": {
              "id": 25421,
              "nodeType": "Block",
              "src": "226:79:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25407,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "242:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "246:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "242:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "id": 25413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130303030",
                          "id": 25409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "253:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 25412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 25410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "261:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 25411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "267:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "261:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "253:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 25406,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25065,
                      "src": "236:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "236:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25415,
                  "nodeType": "ExpressionStatement",
                  "src": "236:34:19"
                },
                {
                  "expression": {
                    "id": 25419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25416,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25399,
                      "src": "280:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25417,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "288:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 25418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "292:6:19",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "288:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "280:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25420,
                  "nodeType": "ExpressionStatement",
                  "src": "280:18:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d61726b6f20546f6b656e",
                    "id": 25402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "198:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_63f68c6bde49f71eca05c5a648fd683441f4531f812a9329e813f2f04670ff2b",
                      "typeString": "literal_string \"Marko Token\""
                    },
                    "value": "Marko Token"
                  },
                  {
                    "hexValue": "4d544e",
                    "id": 25403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "212:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3684a7f68c9bf401655b4829032cb54e305d49285fbfed2a31ddc89e5438020e",
                      "typeString": "literal_string \"MTN\""
                    },
                    "value": "MTN"
                  }
                ],
                "id": 25404,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 25401,
                  "name": "ERC20",
                  "nameLocations": [
                    "192:5:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25248,
                  "src": "192:5:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "192:26:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:2:19"
            },
            "returnParameters": {
              "id": 25405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:19"
            },
            "scope": 25456,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25443,
            "nodeType": "FunctionDefinition",
            "src": "367:131:19",
            "nodes": [],
            "body": {
              "id": 25442,
              "nodeType": "Block",
              "src": "414:84:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25430,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "432:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "436:6:19",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "432:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25432,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25399,
                          "src": "446:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "432:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792061646d696e",
                        "id": 25434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "452:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        },
                        "value": "only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        }
                      ],
                      "id": 25429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "424:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25436,
                  "nodeType": "ExpressionStatement",
                  "src": "424:41:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25438,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25424,
                        "src": "481:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25439,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25426,
                        "src": "484:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25437,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25065,
                      "src": "475:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:16:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25441,
                  "nodeType": "ExpressionStatement",
                  "src": "475:16:19"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "376:4:19",
            "parameters": {
              "id": 25427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25424,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "389:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25443,
                  "src": "381:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25426,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "398:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25443,
                  "src": "393:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25425,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "380:25:19"
            },
            "returnParameters": {
              "id": 25428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:0:19"
            },
            "scope": 25456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25455,
            "nodeType": "FunctionDefinition",
            "src": "619:76:19",
            "nodes": [],
            "body": {
              "id": 25454,
              "nodeType": "Block",
              "src": "654:41:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "670:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "674:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "670:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25451,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25445,
                        "src": "681:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25448,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25137,
                      "src": "664:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:24:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25453,
                  "nodeType": "ExpressionStatement",
                  "src": "664:24:19"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "628:4:19",
            "parameters": {
              "id": 25446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25445,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "638:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25455,
                  "src": "633:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25444,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:13:19"
            },
            "returnParameters": {
              "id": 25447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:0:19"
            },
            "scope": 25456,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25396,
              "name": "ERC20",
              "nameLocations": [
                "140:5:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25248,
              "src": "140:5:19"
            },
            "id": 25397,
            "nodeType": "InheritanceSpecifier",
            "src": "140:5:19"
          }
        ],
        "canonicalName": "MyContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25456,
          25248,
          25351,
          25326,
          25373
        ],
        "name": "MyContract",
        "nameLocation": "126:10:19",
        "scope": 25457,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 19
}